name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
    
    - name: Build binaries
      run: |
        # Linux AMD64
        GOOS=linux GOARCH=amd64 go build -ldflags="-s -w" -o nether-linux-amd64 ./cmd/nether
        
        # Linux ARM64
        GOOS=linux GOARCH=arm64 go build -ldflags="-s -w" -o nether-linux-arm64 ./cmd/nether
        
        # macOS AMD64
        GOOS=darwin GOARCH=amd64 go build -ldflags="-s -w" -o nether-darwin-amd64 ./cmd/nether
        
        # macOS ARM64 (Apple Silicon)
        GOOS=darwin GOARCH=arm64 go build -ldflags="-s -w" -o nether-darwin-arm64 ./cmd/nether
        
        # Windows AMD64
        GOOS=windows GOARCH=amd64 go build -ldflags="-s -w" -o nether-windows-amd64.exe ./cmd/nether
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          nether-linux-amd64
          nether-linux-arm64
          nether-darwin-amd64
          nether-darwin-arm64
          nether-windows-amd64.exe
        body: |
          ## nether v1.0.0
          
          ‚ö° Lightning-fast decentralized subdomain enumeration
          
          ### Installation
          
          **Linux/macOS (one-liner):**
          ```bash
          curl -sSL https://raw.githubusercontent.com/amoz0x/nether/main/install.sh | bash
          ```
          
          **Manual installation:**
          - Download the binary for your platform
          - Make it executable: `chmod +x nether-*`
          - Move to PATH: `sudo mv nether-* /usr/local/bin/nether`
          
          ### Usage
          ```bash
          nether sub example.com
          ```
          
          ### Features
          - ‚ö° Sub-second results from global P2P network
          - üåç Automatic global sharing of scan results
          - üíæ Smart local caching
          - üöÄ No configuration required
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
